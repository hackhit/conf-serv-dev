# Configuración Virtual Host para example-domain.com
# Archivo: /etc/apache2/sites-available/example-domain.com.conf
# 
# INSTRUCCIONES:
# 1. Copiar este archivo y renombrar según tu dominio
# 2. Reemplazar "example-domain.com" con tu dominio real
# 3. Ajustar rutas y configuraciones según necesidades
# 4. Habilitar el sitio: sudo a2ensite tu-dominio.conf

<VirtualHost *:80>
    # Configuración básica del dominio
    ServerName example-domain.com
    ServerAlias www.example-domain.com
    DocumentRoot /var/www/example-domain.com
    
    # Logs específicos del sitio
    ErrorLog ${APACHE_LOG_DIR}/example-domain_error.log
    CustomLog ${APACHE_LOG_DIR}/example-domain_access.log combined
    
    # Configuración del directorio principal
    <Directory /var/www/example-domain.com>
        Options Indexes FollowSymLinks MultiViews
        AllowOverride All
        Require all granted
        DirectoryIndex index.html index.php
    </Directory>
    
    # ===============================================
    # CONFIGURACIONES OPCIONALES
    # ===============================================
    
    # Área administrativa protegida
    <Directory /var/www/example-domain.com/admin>
        AuthType Basic
        AuthName "Área Administrativa"
        AuthUserFile /etc/apache2/.htpasswd-example
        Require valid-user
    </Directory>
    
    # API REST
    <Directory /var/www/example-domain.com/api>
        Options -Indexes
        AllowOverride None
        Require all granted
        
        # URL Rewriting para API REST
        RewriteEngine On
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteRule ^(.*)$ index.php [QSA,L]
        
        # Headers CORS para API
        Header always set Access-Control-Allow-Origin "*"
        Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
        Header always set Access-Control-Allow-Headers "Content-Type, Authorization"
    </Directory>
    
    # Uploads de archivos
    <Directory /var/www/example-domain.com/uploads>
        Options -Indexes -ExecCGI
        AllowOverride None
        Require all granted
        
        # Prevenir ejecución de scripts en uploads
        RemoveHandler .php .phtml .php3 .php4 .php5 .phps
        RemoveType .php .phtml .php3 .php4 .php5 .phps
    </Directory>
    
    # ===============================================
    # CONFIGURACIÓN DE PHP (si aplica)
    # ===============================================
    <FilesMatch \.php$>
        SetHandler "proxy:unix:/var/run/php/php8.1-fpm.sock|fcgi://localhost"
    </FilesMatch>
    
    # ===============================================
    # HEADERS DE SEGURIDAD
    # ===============================================
    Header always set X-Content-Type-Options nosniff
    Header always set X-Frame-Options SAMEORIGIN
    Header always set X-XSS-Protection "1; mode=block"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    
    # ===============================================
    # OPTIMIZACIÓN Y COMPRESIÓN
    # ===============================================
    
    # Compresión GZIP
    <Location />
        SetOutputFilter DEFLATE
        SetEnvIfNoCase Request_URI \
            \.(?:gif|jpe?g|png|ico|svg)$ no-gzip dont-vary
        SetEnvIfNoCase Request_URI \
            \.(?:exe|t?gz|zip|bz2|sit|rar|pdf)$ no-gzip dont-vary
    </Location>
    
    # Cache para archivos estáticos
    <LocationMatch "\.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$">
        ExpiresActive On
        ExpiresDefault "access plus 1 month"
        Header append Cache-Control "public"
    </LocationMatch>
    
    # ===============================================
    # CONFIGURACIONES DE LÍMITES
    # ===============================================
    
    # Límite de tamaño de request (50MB)
    LimitRequestBody 52428800
    
    # Timeout personalizado
    Timeout 60
    
    # ===============================================
    # REDIRECCIÓN A HTTPS (activar después de SSL)
    # ===============================================
    # Descomentar estas líneas después de configurar SSL
    # RewriteEngine on
    # RewriteCond %{SERVER_NAME} =example-domain.com [OR]
    # RewriteCond %{SERVER_NAME} =www.example-domain.com
    # RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
</VirtualHost>

# ===============================================
# CONFIGURACIÓN HTTPS (SSL)
# ===============================================
# Esta sección se activa después de configurar Let's Encrypt

<VirtualHost *:443>
    ServerName example-domain.com
    ServerAlias www.example-domain.com
    DocumentRoot /var/www/example-domain.com
    
    # Logs específicos SSL
    ErrorLog ${APACHE_LOG_DIR}/example-domain_ssl_error.log
    CustomLog ${APACHE_LOG_DIR}/example-domain_ssl_access.log combined
    
    # Configuración SSL (Let's Encrypt completará automáticamente)
    SSLEngine on
    SSLCertificateFile /etc/letsencrypt/live/example-domain.com/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/example-domain.com/privkey.pem
    Include /etc/letsencrypt/options-ssl-apache.conf
    
    # Configuración del directorio
    <Directory /var/www/example-domain.com>
        Options Indexes FollowSymLinks MultiViews
        AllowOverride All
        Require all granted
        DirectoryIndex index.html index.php
    </Directory>
    
    # Headers de seguridad reforzados para HTTPS
    Header always set Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"
    Header always set X-Content-Type-Options nosniff
    Header always set X-Frame-Options SAMEORIGIN
    Header always set X-XSS-Protection "1; mode=block"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    
    # Content Security Policy (ajustar según necesidades)
    Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'"
</VirtualHost>

# ===============================================
# INSTRUCCIONES DE IMPLEMENTACIÓN
# ===============================================
#
# 1. Crear directorio web:
#    sudo mkdir -p /var/www/example-domain.com
#    sudo chown -R www-data:www-data /var/www/example-domain.com
#    sudo chmod -R 755 /var/www/example-domain.com
#
# 2. Crear archivo de contraseñas (si usas autenticación básica):
#    sudo htpasswd -c /etc/apache2/.htpasswd-example admin
#
# 3. Habilitar sitio:
#    sudo a2ensite example-domain.com.conf
#    sudo systemctl reload apache2
#
# 4. Agregar zona DNS en /etc/bind/named.conf.local:
#    zone "example-domain.com" {
#        type master;
#        file "/etc/bind/db.example-domain.com";
#        allow-transfer { any; };
#        allow-query { any; };
#    };
#
# 5. Crear archivo de zona DNS: /etc/bind/db.example-domain.com
#
# 6. Configurar SSL:
#    sudo certbot --apache -d example-domain.com -d www.example-domain.com
#
# 7. Verificar configuración:
#    sudo apache2ctl configtest
#    sudo systemctl status apache2